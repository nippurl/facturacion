<?php

namespace App\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * @ORM\Entity(repositoryClass="App\Repository\PagoFormaRepository")
 * @ORM\Table(uniqueConstraints={@ORM\UniqueConstraint(name="unico",columns={"pago_forma_tipo_id","cuotas"})})
 * @ORM\HasLifecycleCallbacks()
 */
class PagoForma extends Base
{
    const EFECTIVO =1;
    /**
     * @ORM\Id()
     * @ORM\GeneratedValue()
     * @ORM\Column(type="integer")
     */
    private $id;

    /**
     * @var int
     * @ORM\Column(type="smallint", options={"default"="1"})
     */
    private $cuotas;

    /**
     * @ORM\Column(type="float")
     * @var float
     */

    private $interes;

    /**
     * @var PagoFormaTipo
     * @ORM\ManyToOne(targetEntity="PagoFormaTipo", inversedBy="cuotas")
     * @Assert\NotNull()
     */
    private $pagoFormaTipo;

    /**
     * @var Pagos[]|ArrayCollection
     * @ORM\OneToMany(targetEntity="App\Entity\Pago", mappedBy="forma")
     */
    private $pagos;


    public function __construct(PagoFormaTipo $pagoForma = null)
    {
        parent::__construct();
        $this->setPagoForma($pagoForma);
        $this->pagos = new ArrayCollection();
        $this->cuotas = 1;
        $this->interes = 1;
    }

    /**
     * @param PagoFormaTipo $PagoForma
     */
    public function setPagoForma(?PagoFormaTipo $PagoForma)
    {
        if ($PagoForma) {
            $this->pagoFormaTipo = $PagoForma;
          //  $PagoForma->addCuota($this);
        }

    }

    /**
     * Devuleve Efectivo
     */
    public static function Efectivo(): PagoForma
    {
        global $kernel;
        if ('AppCache' == get_class($kernel)) {
            $kernel = $kernel->getKernel();
        }
        $container = $kernel->getContainer();
        /* @var $container  \Symfony\Component\DependencyInjection\Container */
        $em = $container->get('doctrine.orm.default_entity_manager');
        return $em->find(PagoForma::class, 1);
    }

    /**
     * @return mixed
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @param mixed $id
     */
    public function setId($id)
    {
        $this->id = $id;
    }

    /**
     * @return float
     */
    public function getInteres()
    {
        return $this->interes;
    }

    /**
     * @param float $interes
     */
    public function setInteres($interes)
    {
        $this->interes = $interes;
    }

    /**
     * @return PagoFormaTipo
     */
    public function getPagoForma()
    {
        return $this->pagoFormaTipo;
    }

    /**
     * @ORM\PostPersist()
     */
    public function postPersist()
    {
        parent::postPersist(); // TODO: Change the autogenerated stub
    }

    /**
     * @ORM\PostUpdate()
     */
    public function postUpdate()
    {
        return parent::postUpdate(); // TODO: Change the autogenerated stub
    }

    /**
     * @ORM\PreUpdate()
     */
    public function preUpdate()
    {
        return parent::preUpdate(); // TODO: Change the autogenerated stub
    }

    /**
     * @ORM\PrePersist()
     */
    public function prePersist()
    {
        return parent::prePersist(); // TODO: Change the autogenerated stub
    }

    public function __toString()
    {
        $xx = $this->pagoFormaTipo->getNombre();

        if ($this->cuotas > 1) {
            $xx .= " (" . $this->getCuotas() . ")";
        }
        return $xx;


    }

    /**
     * @return int
     */
    public function getCuotas()
    {
        return $this->cuotas;
    }

    /**
     * @param int $cuotas
     */
    public function setCuotas($cuotas)
    {
        $this->cuotas = $cuotas;
    }

    // add your own fields
}
